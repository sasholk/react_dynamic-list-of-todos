{"version":3,"sources":["api.ts","types/Status.ts","components/context/TodosContext.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","services/data.ts","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Status","TodosContext","React","createContext","isShow","setIsShow","selectedTodo","setSelectedTodo","filterTodos","all","setFilterTodos","query","setQuery","TodosProvider","children","useState","value","useMemo","Provider","TodoItem","todo","useContext","id","title","completed","className","classNames","type","onClick","TodoList","todos","map","TodoFilter","active","onChange","eventFilter","target","placeholder","eventQuery","length","style","pointerEvents","Loader","TodoModal","selectedUser","setSelectedUser","useEffect","userId","user","href","email","name","App","setTodos","dataFromAPI","preparedTodos","filterValues","queryNormalize","toLowerCase","filter","includes","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8609d5e1.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number | null) => get<User>(`/users/${userId}`);\n","export enum Status {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React, { useMemo, useState } from 'react';\nimport { Context } from '../../types/Context';\nimport { Todo } from '../../types/Todo';\nimport { Status } from '../../types/Status';\n\nexport const TodosContext = React.createContext<Context>({\n  isShow: false,\n  setIsShow: () => { },\n  selectedTodo: null,\n  setSelectedTodo: () => { },\n  filterTodos: Status.all,\n  setFilterTodos: () => { },\n  query: '',\n  setQuery: () => { },\n});\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [isShow, setIsShow] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterTodos, setFilterTodos] = useState<Status>(Status.all);\n  const [query, setQuery] = useState('');\n\n  const value = useMemo(() => ({\n    isShow,\n    setIsShow,\n    selectedTodo,\n    setSelectedTodo,\n    filterTodos,\n    setFilterTodos,\n    query,\n    setQuery,\n  }), [isShow, selectedTodo, filterTodos, query]);\n\n  return (\n    <TodosContext.Provider value={value}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import classNames from 'classnames';\nimport { useContext } from 'react';\nimport { TodosContext } from '../context/TodosContext';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const {\n    selectedTodo,\n    setSelectedTodo,\n  } = useContext(TodosContext);\n\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  const handleOnClick = () => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <>\n      <tr\n        data-cy=\"todo\"\n        className={classNames({\n          'has-background-info-light': selectedTodo?.id === id,\n        })}\n      >\n        <td className=\"is-vcentered\">{id}</td>\n        <td className=\"is-vcentered\">\n          {completed && (\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          )}\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p\n            className={classNames({\n              'has-text-danger': !completed,\n              'has-text-success': completed,\n            })}\n          >\n            {title}\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button\n            data-cy=\"selectButton\"\n            className=\"button\"\n            type=\"button\"\n            onClick={handleOnClick}\n          >\n            <span className=\"icon\">\n              <i\n                className={classNames('far', {\n                  'fa-eye': selectedTodo?.id !== id,\n                  'fa-eye-slash': selectedTodo?.id === id,\n                })}\n              />\n            </span>\n          </button>\n        </td>\n      </tr>\n    </>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo: Todo) => (\n        <TodoItem todo={todo} key={todo.id} />\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useContext } from 'react';\nimport { Status } from '../../types/Status';\nimport { TodosContext } from '../context/TodosContext';\n\nexport const TodoFilter: React.FC = () => {\n  const {\n    setFilterTodos,\n    query,\n    setQuery,\n  } = useContext(TodosContext);\n\n  const {\n    all,\n    active,\n    completed,\n  } = Status;\n\n  const handleFilter = (eventFilter: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterTodos(eventFilter.target.value as Status);\n  };\n\n  const handleQuery = (eventQuery: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(eventQuery.target.value);\n  };\n\n  const reset = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleFilter}\n          >\n            <option value={all}>All</option>\n            <option value={active}>Active</option>\n            <option value={completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {!!query.length && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={reset}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { TodosContext } from '../context/TodosContext';\n\nexport const TodoModal: React.FC = () => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  const { setIsShow, selectedTodo, setSelectedTodo } = useContext(TodosContext);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId).then(user => setSelectedUser(user));\n    }\n  }, [selectedTodo]);\n\n  const handleClose = () => {\n    setIsShow(false);\n    setSelectedTodo(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">\n                  Done\n                </strong>\n              ) : (\n                <strong className=\"has-text-danger\">\n                  Planned\n                </strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useContext, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\nimport { data } from './services/data';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { TodosContext } from './components/context/TodosContext';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const { selectedTodo, filterTodos, query } = useContext(TodosContext);\n\n  useEffect(() => {\n    getTodos().then(dataFromAPI => setTodos(dataFromAPI));\n  }, []);\n\n  const preparedTodos = data(todos, filterTodos, query);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && (\n                <Loader />\n              )}\n\n              {!!todos.length && (\n                <TodoList todos={preparedTodos} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo?.userId && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import { Status } from '../types/Status';\nimport { Todo } from '../types/Todo';\n\nexport function data(\n  todos: Todo[],\n  filterValues: Status,\n  query: string,\n): Todo[] {\n  const queryNormalize = query.toLowerCase();\n\n  const preparedTodos = [...todos].filter(todo => (\n    todo.title.toLowerCase().includes(queryNormalize)\n  ));\n\n  return preparedTodos.filter((todo: Todo) => {\n    switch (filterValues) {\n      case Status.active:\n        return !todo.completed;\n\n      case Status.completed:\n        return todo.completed;\n\n      default:\n        return todo;\n    }\n  });\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodosProvider } from './components/context/TodosContext';\n\nReactDOM.render(\n  <TodosProvider>\n    <App />\n  </TodosProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}